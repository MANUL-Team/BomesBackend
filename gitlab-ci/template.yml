
stages:          # List of stages for jobs, and their order of execution
  - build

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

# Шаблон сборки образа 
.build-template-api:
  stage: build
  rules:
    # Если есть изменения, то собираем соответствующий микросервис
    - changes:
        paths:
          - gitlab-ci/**/*
          - Services/$PROJECT/**/*
      when: always
    # В иных случаях оставляем как manual, чтобы разработчик мог запустить по своему желанию
    - when: manual
  script:
    - echo "Deleting oldest container and image..."
    - docker stop $DOCKERNAME || echo "$DOCKERNAME is stoped"
    - docker rm $DOCKERNAME || echo "$DOCKERNAME is removed"
    - echo "Deleting oldest image $DOCKERNAME"
    - docker rmi $DOCKERNAME || echo "$DOCKERNAME image is removed"
    - cd Servises/$PROJECT
    - docker build -t $DOCKERNAME .
    - docker run -dit --name $DOCKERNAME -p 8000:8000 --net docker_bomes --ip $IP $DOCKERNAME
    - echo "Compile complete."

.build-template-servises:
  stage: build
  rules:
    # Если есть изменения, то собираем соответствующий микросервис
    - changes:
        paths:
          - gitlab-ci/**/*
          - Services/$PROJECT/**/*
      when: always
    # В иных случаях оставляем как manual, чтобы разработчик мог запустить по своему желанию
    - when: manual
  script:
    - echo "Deleting oldest container and image..."
    - docker stop $DOCKERNAME || echo "$DOCKERNAME is stoped"
    - docker rm $DOCKERNAME || echo "$DOCKERNAME is removed"
    - echo "Deleting oldest image $DOCKERNAME"
    - docker rmi $DOCKERNAME || echo "$DOCKERNAME image is removed"
    - cd Servises/$PROJECT
    - docker build -t $DOCKERNAME .
    - docker run -dit --name $DOCKERNAME --net docker_bomes --ip $IP $DOCKERNAME
    - echo "Compile complete."
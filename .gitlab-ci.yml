stages:
  - build-docker
  - deploy-dev

workflow:
  rules:
    # Пайплайн в контексте MR
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # Если контекст коммита, но есть открытый MR, то НЕ запускаемся
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    # Одинокий коммит ИЛИ тэг
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'

variables:
  PARENT_PIPELINE_SOURCE: "$CI_PIPELINE_SOURCE"
  PARENT_LABELS: "$CI_MERGE_REQUEST_LABELS"

.trigger:
  trigger:
    # Автомагически подбираем нужный файл
    include:
      - local: Services/$PROJECT/.gitlab-ci.yml
    # Родительский пайплайн ждет выполнения всех дочерних
    strategy: depend
    # Передаем переменные в дочерние пайплайны
    forward:
      # Переменные CI, например, секреты
      pipeline_variables: true
      # Переменные из глобального блока variables
      yaml_variables: true

BomesAPI_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesAPI"
    RUN_SPECIFIC_JOB: "dev-api"
    SPECIFIC_SETTINGS_DOCKER: -p 8000:8000

BomesWebCore_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesWebCore"
    RUN_SPECIFIC_JOB: "dev-api"

BomesWebDeploy:
  stage: deploy-dev
  rules:
      when: always
  script:
    - gunzip *.tar.gz
    - docker load -i *.tar
    - docker run -dit --name $DOCKERNAME $SPECIFIC_SETTINGS_DOCKER --net docker_bomes --ip $IP $DOCKERNAME
    - echo "Compile complete."
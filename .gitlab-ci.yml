stages:
  - build-docker
  - deploy-dev

workflow:
  rules:
    # Пайплайн в контексте MR
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # Если контекст коммита, но есть открытый MR, то НЕ запускаемся
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    # Одинокий коммит ИЛИ тэг
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'

variables:
  PARENT_PIPELINE_SOURCE: "$CI_PIPELINE_SOURCE"
  PARENT_LABELS: "$CI_MERGE_REQUEST_LABELS"

.trigger:
  trigger:
    # Автомагически подбираем нужный файл
    include:
      - local: Services/$PROJECT/.gitlab-ci.yml
    # Передаем переменные в дочерние пайплайны
    forward:
      # Переменные CI, например, секреты
      pipeline_variables: true
      # Переменные из глобального блока variables
      yaml_variables: true


# При добавлении сервиса копируем блок ниже и вставляем свои названия. Смотреть также .gitlab-ci.yml нового сервиса и compose.yml

###
BomesAPI_build: #<-- Здесь (Название сервиса)_build
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesAPI" #<-- Здесь PROJECT: "(Название сервиса)"
###

BomesWebCore_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesWebCore"

BomesAuthentificationService_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesAuthentificationService"

BomesWebTelegramBot_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesWebTelegramBot"

BomesMailService_build:
  stage: build-docker
  extends: .trigger
  variables:
    PROJECT: "BomesMailService"

BomesWebDeploy:
  stage: deploy-dev
  needs:
  - job: BomesAPI_build
  - job: BomesWebCore_build
  - job: BomesAuthentificationService_build
  - job: BomesWebTelegramBot_build
  - job: BomesMailService_build
  script:
    - mv /tmp/*.tar.gz ./ || echo "No new container to deploy"
    - ls -lash
    - gunzip *.tar.gz || echo "No new container to deploy"
    - for var in $(ls | grep .tar); do docker load -i "$var"; done || echo "No new container to deploy"
    - docker compose up -d